# HuskyApply Gateway - Production Configuration
# This configuration file is optimized for production deployment with high performance, security, and reliability

# Spring Profile
spring.profiles.active=prod

# Database Configuration - Production PostgreSQL
spring.datasource.url=jdbc:postgresql://${DB_HOST:huskyapply-db.internal}:${DB_PORT:5432}/${DB_NAME:huskyapply}
spring.datasource.username=${DB_USERNAME:huskyapply_user}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Database Connection Pool - Production Optimized
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.pool-name=HuskyApplyHikariPool

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.jcache.JCacheRegionFactory

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.validate-on-migrate=true
spring.flyway.out-of-order=false

# RabbitMQ Configuration - Production Cluster
spring.rabbitmq.addresses=${RABBITMQ_CLUSTER_ADDRESSES:rabbitmq-1.internal:5672,rabbitmq-2.internal:5672,rabbitmq-3.internal:5672}
spring.rabbitmq.username=${RABBITMQ_USERNAME:huskyapply_user}
spring.rabbitmq.password=${RABBITMQ_PASSWORD}
spring.rabbitmq.virtual-host=/huskyapply

# RabbitMQ Connection Pool
spring.rabbitmq.cache.connection.mode=connection
spring.rabbitmq.cache.connection.size=10
spring.rabbitmq.cache.channel.size=25
spring.rabbitmq.connection-timeout=30000
spring.rabbitmq.requested-heartbeat=60
spring.rabbitmq.publisher-confirm-type=correlated
spring.rabbitmq.publisher-returns=true

# RabbitMQ Exchange and Queue Configuration
rabbitmq.exchange.name=huskyapply.jobs.exchange
rabbitmq.queue.name=huskyapply.jobs.queue
rabbitmq.routing.key=huskyapply.jobs.queue
rabbitmq.dlq.exchange.name=huskyapply.jobs.dlq.exchange
rabbitmq.dlq.queue.name=huskyapply.jobs.dlq.queue

# Redis Configuration - Production Cluster
spring.data.redis.cluster.nodes=${REDIS_CLUSTER_NODES:redis-1.internal:6379,redis-2.internal:6379,redis-3.internal:6379}
spring.data.redis.password=${REDIS_PASSWORD}
spring.data.redis.timeout=5000ms
spring.data.redis.lettuce.pool.max-active=20
spring.data.redis.lettuce.pool.max-idle=10
spring.data.redis.lettuce.pool.min-idle=5
spring.data.redis.lettuce.pool.max-wait=-1ms
spring.data.redis.lettuce.shutdown-timeout=100ms

# JWT Configuration - Production Security
jwt.secret.key=${JWT_SECRET_KEY}
jwt.expiration.ms=86400000
jwt.refresh.expiration.ms=604800000
jwt.issuer=huskyapply.com
jwt.audience=huskyapply-api

# AWS S3 Configuration
aws.s3.bucket-name=${S3_BUCKET_NAME}
aws.s3.region=${S3_REGION:us-east-1}
aws.s3.endpoint-override=${S3_ENDPOINT_OVERRIDE:}
aws.s3.path-style-access=false
aws.access-key-id=${AWS_ACCESS_KEY_ID}
aws.secret-access-key=${AWS_SECRET_ACCESS_KEY}

# S3 Upload Configuration
aws.s3.max-file-size=50MB
aws.s3.allowed-file-types=pdf,doc,docx,txt
aws.s3.presigned-url-expiration=3600

# Internal API Security
internal.api.key=${INTERNAL_API_KEY}

# Stripe Payment Configuration
stripe.secret.key=${STRIPE_SECRET_KEY}
stripe.publishable.key=${STRIPE_PUBLISHABLE_KEY}
stripe.webhook.secret=${STRIPE_WEBHOOK_SECRET}
stripe.api.version=2023-08-16

# Rate Limiting Configuration - Production Values
ratelimit.requests.per.minute=300
ratelimit.requests.per.hour=5000
ratelimit.requests.per.day=50000
ratelimit.burst.size=100
ratelimit.premium.multiplier=5

# Server Configuration
server.port=${SERVER_PORT:8080}
server.servlet.context-path=/
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

# SSL/TLS Configuration (if terminating SSL at application level)
server.ssl.enabled=${SSL_ENABLED:false}
server.ssl.key-store=${SSL_KEYSTORE_PATH:}
server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD:}
server.ssl.key-store-type=JKS
server.ssl.key-alias=huskyapply

# HTTP/2 Support
server.http2.enabled=true

# Actuator Configuration - Production Security
management.server.port=${MANAGEMENT_PORT:9090}
management.endpoints.web.exposure.include=health,info,prometheus,metrics
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=always
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

# Health Check Configuration
management.health.redis.enabled=true
management.health.rabbit.enabled=true
management.health.db.enabled=true
management.health.diskspace.enabled=true
management.health.ping.enabled=true

# Prometheus Metrics - Production
management.metrics.export.prometheus.enabled=true
management.metrics.export.prometheus.pushgateway.enabled=${PROMETHEUS_PUSHGATEWAY_ENABLED:false}
management.metrics.export.prometheus.pushgateway.base-url=${PROMETHEUS_PUSHGATEWAY_URL:}
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.9,0.95,0.99
management.metrics.tags.application=huskyapply-gateway
management.metrics.tags.environment=production
management.metrics.tags.region=${AWS_REGION:us-east-1}
management.metrics.tags.instance=${HOSTNAME:unknown}

# Custom Business Metrics
metrics.business.revenue.enabled=true
metrics.business.jobs.enabled=true
metrics.business.users.enabled=true

# Logging Configuration - Production
logging.level.root=WARN
logging.level.com.huskyapply=INFO
logging.level.org.springframework.security=ERROR
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type=WARN
logging.level.org.springframework.amqp=WARN

# Structured Logging for Production
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-},%X{userId:-},%X{jobId:-}] %logger{36} - %msg%n

# Log Files - Production Rotation
logging.file.name=${LOG_PATH:/var/log/huskyapply}/gateway.log
logging.file.max-size=100MB
logging.file.max-history=30
logging.logback.rollingpolicy.total-size-cap=10GB
logging.logback.rollingpolicy.clean-history-on-start=true

# JSON Logging for ELK Stack
logging.config=${LOGGING_CONFIG:classpath:logback-spring.xml}

# Application Configuration
app.name=HuskyApply Gateway
app.version=@project.version@
app.description=AI-powered job application processing gateway
app.contact.email=your-support@example.com

# CORS Configuration - Production
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:https://app.huskyapply.com,https://huskyapply.com}
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=Content-Type,Authorization,X-Requested-With,Accept,Origin
cors.allow-credentials=true
cors.max-age=3600

# Security Headers
security.headers.frame-options=DENY
security.headers.content-type-options=nosniff
security.headers.xss-protection=1; mode=block
security.headers.referrer-policy=strict-origin-when-cross-origin
security.headers.hsts.enabled=true
security.headers.hsts.max-age=31536000
security.headers.hsts.include-subdomains=true

# Async Processing Configuration
spring.task.execution.pool.core-size=10
spring.task.execution.pool.max-size=50
spring.task.execution.pool.queue-capacity=100
spring.task.execution.pool.keep-alive=60s
spring.task.execution.thread-name-prefix=huskyapply-async-

# Jackson Configuration
spring.jackson.default-property-inclusion=non_null
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.serialization.fail-on-empty-beans=false
spring.jackson.deserialization.fail-on-unknown-properties=false

# Tomcat Configuration - Production Tuning
server.tomcat.accept-count=100
server.tomcat.max-connections=8192
server.tomcat.threads.max=200
server.tomcat.threads.min-spare=25
server.tomcat.connection-timeout=20000
server.tomcat.keep-alive-timeout=60000
server.tomcat.max-keep-alive-requests=100
server.tomcat.compression.enabled=true
server.tomcat.compression.min-response-size=2048

# Circuit Breaker Configuration
resilience4j.circuitbreaker.instances.default.register-health-indicator=true
resilience4j.circuitbreaker.instances.default.sliding-window-size=10
resilience4j.circuitbreaker.instances.default.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.default.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.default.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.default.wait-duration-in-open-state=10000
resilience4j.circuitbreaker.instances.default.automatic-transition-from-open-to-half-open-enabled=true

# Retry Configuration
resilience4j.retry.instances.default.max-attempts=3
resilience4j.retry.instances.default.wait-duration=1000
resilience4j.retry.instances.default.retry-exceptions=java.io.IOException,java.util.concurrent.TimeoutException

# Bulk Headroom Configuration
resilience4j.bulkhead.instances.default.max-concurrent-calls=25
resilience4j.bulkhead.instances.default.max-wait-duration=0

# Time Limiter Configuration
resilience4j.timelimiter.instances.default.timeout-duration=30s
resilience4j.timelimiter.instances.default.cancel-running-future=true

# Cache Configuration
spring.cache.type=redis
spring.cache.redis.time-to-live=3600000
spring.cache.redis.cache-null-values=false
spring.cache.redis.key-prefix=huskyapply:cache:
spring.cache.redis.use-key-prefix=true

# OpenAPI Documentation
springdoc.api-docs.enabled=false
springdoc.swagger-ui.enabled=false

# Graceful Shutdown
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=30s