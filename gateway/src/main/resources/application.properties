rabbitmq.exchange.name=jobs.exchange
rabbitmq.queue.name=jobs.queue
rabbitmq.routing.key=jobs.queue

# RabbitMQ Connection Configuration
spring.rabbitmq.host=${RABBITMQ_HOST:localhost}
spring.rabbitmq.port=5672
spring.rabbitmq.username=husky
spring.rabbitmq.password=husky

# Advanced RabbitMQ Configuration
rabbitmq.advanced.enabled=true

# Priority Queue Configuration
rabbitmq.queue.priority.enabled=true
rabbitmq.queue.sharding.enabled=true
rabbitmq.queue.shards=4
rabbitmq.queue.quorum.enabled=true
rabbitmq.queue.lazy.enabled=true

# Message Compression Configuration
rabbitmq.compression.enabled=true
rabbitmq.compression.algorithm=LZ4
rabbitmq.compression.level=6
rabbitmq.compression.threshold=1024

# Message Batching Configuration
rabbitmq.batch.enabled=true
rabbitmq.batch.size=50
rabbitmq.batch.timeout=5000
rabbitmq.batch.max.pending=1000
rabbitmq.batch.flush.interval=1000
rabbitmq.batch.priority.enabled=true
rabbitmq.batch.sharding.enabled=true

# Connection Pool Configuration
rabbitmq.connection.pool.size=20
rabbitmq.channel.cache.size=50
rabbitmq.consumer.prefetch=10
rabbitmq.publisher.confirms=true
rabbitmq.publisher.returns=true

# Performance Tuning
spring.rabbitmq.listener.simple.concurrency=2
spring.rabbitmq.listener.simple.max-concurrency=10
spring.rabbitmq.listener.simple.prefetch=10
spring.rabbitmq.listener.simple.acknowledge-mode=manual
spring.rabbitmq.listener.simple.auto-startup=true
spring.rabbitmq.listener.simple.consumer-batch-enabled=true

# Connection Settings
spring.rabbitmq.connection-timeout=30000
spring.rabbitmq.requested-heartbeat=60s
spring.rabbitmq.publisher-confirm-type=correlated
spring.rabbitmq.publisher-returns=true

# Template Settings
spring.rabbitmq.template.mandatory=true
spring.rabbitmq.template.reply-timeout=60000
spring.rabbitmq.template.receive-timeout=60000

# R2DBC Master Database Configuration (Write Operations)
spring.r2dbc.master.url=r2dbc:postgresql://${DB_MASTER_HOST:localhost}:${DB_MASTER_PORT:5432}/${DB_NAME:huskyapply}
spring.r2dbc.master.username=${DB_USER:husky}
spring.r2dbc.master.password=${DB_PASSWORD:husky}

# R2DBC Read Replica 1 Configuration
spring.r2dbc.read1.url=r2dbc:postgresql://${DB_READ1_HOST:localhost}:${DB_READ1_PORT:5433}/${DB_NAME:huskyapply}
spring.r2dbc.read1.username=${DB_USER:husky}
spring.r2dbc.read1.password=${DB_PASSWORD:husky}

# R2DBC Read Replica 2 Configuration
spring.r2dbc.read2.url=r2dbc:postgresql://${DB_READ2_HOST:localhost}:${DB_READ2_PORT:5434}/${DB_NAME:huskyapply}
spring.r2dbc.read2.username=${DB_USER:husky}
spring.r2dbc.read2.password=${DB_PASSWORD:husky}

# R2DBC Master Connection Pool Configuration (Write Operations)
spring.r2dbc.master.pool.enabled=true
spring.r2dbc.master.pool.initial-size=5
spring.r2dbc.master.pool.max-size=15
spring.r2dbc.master.pool.max-idle-time=30m
spring.r2dbc.master.pool.max-acquire-time=60s
spring.r2dbc.master.pool.max-create-connection-time=30s

# R2DBC Read Replica Connection Pool Configuration (Read Operations)
spring.r2dbc.read.pool.enabled=true
spring.r2dbc.read.pool.initial-size=8
spring.r2dbc.read.pool.max-size=25
spring.r2dbc.read.pool.max-idle-time=45m
spring.r2dbc.read.pool.max-acquire-time=30s
spring.r2dbc.read.pool.max-create-connection-time=20s

# Read-Write Splitting Configuration
database.routing.enabled=true
database.routing.default-datasource=read
database.routing.circuit-breaker.enabled=true
database.routing.circuit-breaker.failure-threshold=5
database.routing.circuit-breaker.reset-timeout=30s
database.routing.load-balancer.strategy=round-robin
database.routing.health-check.enabled=true
database.routing.health-check.interval=30s
database.routing.lag-threshold.warning=5s
database.routing.lag-threshold.critical=15s

# JWT Configuration
jwt.secret.key=${JWT_SECRET_KEY}

# AWS S3 Configuration
aws.s3.bucket-name=${S3_BUCKET_NAME}
aws.s3.region=${S3_REGION}
aws.s3.endpoint-override=${S3_ENDPOINT_OVERRIDE:}

# Internal API Security
internal.api.key=${INTERNAL_API_KEY:husky-internal-secret}

# SSE Configuration
sse.connection.timeout=300000
sse.max.connections=1000
sse.cleanup.interval=60

# Reactive Redis Configuration
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}
spring.data.redis.timeout=2000ms
spring.data.redis.connect-timeout=2000ms
spring.data.redis.command-timeout=2000ms

# Reactive Redis Connection Pool Configuration
spring.data.redis.lettuce.pool.enabled=true
spring.data.redis.lettuce.pool.max-active=20
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=2
spring.data.redis.lettuce.pool.max-wait=2000ms
spring.data.redis.lettuce.pool.time-between-eviction-runs=30s

# Reactive WebFlux Configuration
spring.webflux.base-path=/
spring.webflux.static-path-pattern=/**
spring.webflux.hiddenmethod.filter.enabled=false

# Spring Cache Configuration
spring.cache.type=redis
spring.cache.redis.time-to-live=300000ms
spring.cache.redis.cache-null-values=false
spring.cache.redis.key-prefix=huskyapply:cache:
spring.cache.redis.use-key-prefix=true

# Cache-specific TTL settings (overridden in CacheConfig)
cache.ttl.dashboard.stats=300000
cache.ttl.dashboard.jobs=180000
cache.ttl.templates.user=600000
cache.ttl.templates.categories=1800000
cache.ttl.jobs.metadata=120000
cache.ttl.user.session=3600000
cache.ttl.api.response=60000

# Cache compression and serialization
cache.compression.enabled=true
cache.compression.threshold=1024
cache.metrics.enabled=true

# Advanced Multi-Layer Cache Configuration
# L1 Caffeine Cache Settings
cache.l1.caffeine.maximum-size=50000
cache.l1.caffeine.initial-capacity=2000
cache.l1.caffeine.expire-after-write=600
cache.l1.caffeine.expire-after-access=1200
cache.l1.caffeine.refresh-after-write=300

# Machine Learning Cache Optimization
cache.analytics.enabled=true
cache.ml.preheating.enabled=true
cache.ml.clustering.enabled=true
cache.ml.clustering.max-clusters=15
cache.ml.min-data-points=200

# Bloom Filter Configuration
cache.bloom.filter.expected-insertions=200000
cache.bloom.filter.fpp=0.02

# User Behavior Analytics
cache.behavior.session-timeout=7200
cache.behavior.tracking-retention-hours=336
cache.behavior.clustering.auto-update=true

# Cache Performance Tuning
cache.preheating.batch-size=100
cache.preheating.threads=4
cache.invalidation.batch-size=500
cache.pipeline.enabled=true
cache.pipeline.batch-size=50

# Advanced TTL Management
cache.ttl.adaptive.enabled=true
cache.ttl.ml.prediction.enabled=true
cache.ttl.user-behavior.weight=0.7
cache.ttl.content-type.weight=0.3

# Cache Health Monitoring
cache.health.check.interval=30000
cache.health.hit-ratio.threshold=0.85
cache.health.efficiency.threshold=75.0
cache.health.auto-optimization.enabled=true

# Performance Optimization
cache.async.operations.enabled=true
cache.batch.operations.enabled=true
cache.compression.algorithm=lz4
cache.serialization.protocol=kryo

# CDN Integration (L3 Cache)
cache.cdn.enabled=false
cache.cdn.provider=cloudflare
cache.cdn.api-key=${CDN_API_KEY:}
cache.cdn.zone-id=${CDN_ZONE_ID:}
cache.cdn.auto-purge.enabled=true

# Cache Warming Strategies
cache.warming.startup.enabled=true
cache.warming.predictive.enabled=true
cache.warming.user-cohort.enabled=true
cache.warming.seasonal.patterns.enabled=true

# Advanced Analytics and Reporting
cache.analytics.retention-days=30
cache.analytics.export.enabled=true
cache.analytics.realtime.dashboard.enabled=true
cache.analytics.anomaly.detection.enabled=true

# Self-Optimization Features
cache.optimization.auto-size-adjustment.enabled=true
cache.optimization.ttl-learning.enabled=true
cache.optimization.eviction-policy.adaptive=true
cache.optimization.recommendation-engine.enabled=true

# Enhanced HikariCP Connection Pool Configuration
# Primary DataSource Configuration
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:huskyapply}
spring.datasource.username=${DB_USER:husky}
spring.datasource.password=${DB_PASSWORD:husky}
spring.datasource.driver-class-name=org.postgresql.Driver

# HikariCP Pool Configuration - Primary
spring.datasource.hikari.pool-name=HuskyApply-Primary-CP
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=30
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=7200000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.initialization-fail-timeout=10000
spring.datasource.hikari.leak-detection-threshold=120000
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.register-mbeans=true

# HikariCP Data Source Properties - Performance Optimization
spring.datasource.hikari.data-source-properties.cachePrepStmts=true
spring.datasource.hikari.data-source-properties.prepStmtCacheSize=250
spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit=2048
spring.datasource.hikari.data-source-properties.useServerPrepStmts=true
spring.datasource.hikari.data-source-properties.useLocalSessionState=true
spring.datasource.hikari.data-source-properties.rewriteBatchedStatements=true
spring.datasource.hikari.data-source-properties.cacheResultSetMetadata=true
spring.datasource.hikari.data-source-properties.cacheServerConfiguration=true
spring.datasource.hikari.data-source-properties.elideSetAutoCommits=true
spring.datasource.hikari.data-source-properties.maintainTimeStats=false

# PostgreSQL-specific HikariCP Properties
spring.datasource.hikari.data-source-properties.ApplicationName=HuskyApply-Gateway
spring.datasource.hikari.data-source-properties.defaultRowFetchSize=1000
spring.datasource.hikari.data-source-properties.logUnclosedConnections=true
spring.datasource.hikari.data-source-properties.assumeMinServerVersion=12.0
spring.datasource.hikari.data-source-properties.stringtype=unspecified
spring.datasource.hikari.data-source-properties.binaryTransfer=true

# Read-Only DataSource Configuration (for read replicas)
spring.datasource.readonly.url=jdbc:postgresql://${DB_READ_HOST:localhost}:${DB_READ_PORT:5433}/${DB_NAME:huskyapply}
spring.datasource.readonly.username=${DB_USER:husky}
spring.datasource.readonly.password=${DB_PASSWORD:husky}
spring.datasource.readonly.driver-class-name=org.postgresql.Driver

# Read-Only HikariCP Pool Configuration
spring.datasource.readonly.pool-name=HuskyApply-ReadOnly-CP
spring.datasource.readonly.minimum-idle=3
spring.datasource.readonly.maximum-pool-size=20
spring.datasource.readonly.idle-timeout=900000
spring.datasource.readonly.max-lifetime=10800000
spring.datasource.readonly.connection-timeout=15000
spring.datasource.readonly.validation-timeout=3000
spring.datasource.readonly.leak-detection-threshold=180000
spring.datasource.readonly.connection-test-query=SELECT 1
spring.datasource.readonly.read-only=true
spring.datasource.readonly.register-mbeans=true

# Rate Limiting Configuration
ratelimit.requests.per.minute=${RATELIMIT_PER_MINUTE:60}
ratelimit.requests.per.hour=${RATELIMIT_PER_HOUR:1000}
ratelimit.requests.per.day=${RATELIMIT_PER_DAY:5000}

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,prometheus,metrics,env
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=always
management.health.redis.enabled=true
management.health.rabbit.enabled=true
management.health.db.enabled=true

# Prometheus Metrics
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.95,0.99
management.metrics.tags.application=huskyapply-gateway

# Logging Configuration
logging.level.com.huskyapply=INFO
logging.level.org.springframework.security=WARN
logging.level.org.springframework.web=INFO
logging.level.org.springframework.webflux=INFO
logging.level.org.springframework.r2dbc=DEBUG
logging.level.io.r2dbc.postgresql.QUERY=DEBUG

# Logging Pattern with Tracing
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-},%X{userId:-}] %logger{36} - %msg%n

# Log Files
logging.file.name=logs/gateway.log
logging.file.max-size=10MB
logging.file.max-history=30
logging.logback.rollingpolicy.total-size-cap=1GB

# OpenTelemetry Tracing Configuration
management.tracing.enabled=${TRACING_ENABLED:true}
management.tracing.sampling.probability=${TRACING_SAMPLING_PROBABILITY:0.1}
management.tracing.jaeger.endpoint=${JAEGER_ENDPOINT:http://localhost:14250}
spring.application.name=huskyapply-gateway
spring.application.version=@project.version@

# Migration Configuration
huskyapply.migration.grpc-enabled=${GRPC_ENABLED:false}
huskyapply.migration.grpc-traffic-percentage=${GRPC_TRAFFIC_PERCENTAGE:0}
huskyapply.migration.http3-enabled=${HTTP3_ENABLED:false}
huskyapply.migration.grpc-fallback-timeout-ms=${GRPC_FALLBACK_TIMEOUT_MS:5000}
huskyapply.migration.max-grpc-retries=${MAX_GRPC_RETRIES:3}

# Circuit Breaker Configuration
huskyapply.migration.circuit-breaker.failure-threshold=${CIRCUIT_BREAKER_FAILURE_THRESHOLD:5}
huskyapply.migration.circuit-breaker.open-duration=${CIRCUIT_BREAKER_OPEN_DURATION:PT30S}
huskyapply.migration.circuit-breaker.half-open-duration=${CIRCUIT_BREAKER_HALF_OPEN_DURATION:PT10S}
huskyapply.migration.circuit-breaker.minimum-throughput=${CIRCUIT_BREAKER_MINIMUM_THROUGHPUT:10}
huskyapply.migration.circuit-breaker.failure-rate-threshold=${CIRCUIT_BREAKER_FAILURE_RATE_THRESHOLD:50.0}

# gRPC Configuration
grpc.server.port=${GRPC_SERVER_PORT:9090}
grpc.server.health-port=${GRPC_HEALTH_PORT:9091}
grpc.server.max-inbound-message-size=${GRPC_MAX_INBOUND_MESSAGE_SIZE:4194304}
grpc.server.max-connections=${GRPC_MAX_CONNECTIONS:100}
grpc.server.keepalive-time=${GRPC_KEEPALIVE_TIME:30s}
grpc.server.keepalive-timeout=${GRPC_KEEPALIVE_TIMEOUT:5s}
grpc.server.permit-keepalive-without-calls=${GRPC_PERMIT_KEEPALIVE_WITHOUT_CALLS:true}
grpc.server.max-connection-idle=${GRPC_MAX_CONNECTION_IDLE:60s}
grpc.server.max-connection-age=${GRPC_MAX_CONNECTION_AGE:120s}

# gRPC Client Configuration for Brain Communication
grpc.client.brain.host=${GRPC_BRAIN_HOST:brain}
grpc.client.brain.port=${GRPC_BRAIN_PORT:9090}
grpc.client.brain.max-inbound-message-size=${GRPC_CLIENT_MAX_INBOUND_MESSAGE_SIZE:4194304}
grpc.client.brain.keepalive-time=${GRPC_CLIENT_KEEPALIVE_TIME:30s}
grpc.client.brain.keepalive-timeout=${GRPC_CLIENT_KEEPALIVE_TIMEOUT:5s}
grpc.client.brain.idle-timeout=${GRPC_CLIENT_IDLE_TIMEOUT:60s}

# gRPC Connection Pool Configuration
grpc.pool.max-connections-per-endpoint=${GRPC_POOL_MAX_CONNECTIONS_PER_ENDPOINT:10}
grpc.pool.max-idle-time=${GRPC_POOL_MAX_IDLE_TIME:PT5M}
grpc.pool.health-check-interval=${GRPC_POOL_HEALTH_CHECK_INTERVAL:PT30S}

# mTLS Configuration
grpc.security.mtls-enabled=${GRPC_MTLS_ENABLED:false}
grpc.security.cert-file=${GRPC_CERT_FILE:infra/certs/gateway-cert.pem}
grpc.security.key-file=${GRPC_KEY_FILE:infra/certs/gateway-key.pem}
grpc.security.ca-file=${GRPC_CA_FILE:infra/certs/ca-cert.pem}
grpc.security.keystore-file=${GRPC_KEYSTORE_FILE:infra/certs/gateway-keystore.p12}
grpc.security.keystore-password=${GRPC_KEYSTORE_PASSWORD:changeit}
grpc.security.truststore-file=${GRPC_TRUSTSTORE_FILE:infra/certs/truststore.p12}
grpc.security.truststore-password=${GRPC_TRUSTSTORE_PASSWORD:changeit}

# HTTP/3 Configuration
server.http3.enabled=${SERVER_HTTP3_ENABLED:false}
server.http3.port=${SERVER_HTTP3_PORT:8443}
server.http3.idle-timeout=${SERVER_HTTP3_IDLE_TIMEOUT:30s}
server.http3.max-concurrent-streams=${SERVER_HTTP3_MAX_CONCURRENT_STREAMS:100}
server.http3.enable-early-data=${SERVER_HTTP3_ENABLE_EARLY_DATA:true}
server.http3.congestion-control-algorithm=${SERVER_HTTP3_CONGESTION_CONTROL_ALGORITHM:cubic}
server.http3.initial-window-size=${SERVER_HTTP3_INITIAL_WINDOW_SIZE:65535}
server.http3.max-frame-size=${SERVER_HTTP3_MAX_FRAME_SIZE:16384}

# Advanced HTTP/3 Configuration
server.quic.enabled=${SERVER_QUIC_ENABLED:false}
server.quic.connection-timeout=${SERVER_QUIC_CONNECTION_TIMEOUT:10s}
server.quic.max-streams-per-connection=${SERVER_QUIC_MAX_STREAMS_PER_CONNECTION:100}
server.quic.enable-0rtt=${SERVER_QUIC_ENABLE_0RTT:true}
server.quic.packet-size=${SERVER_QUIC_PACKET_SIZE:1350}