[project]
name = "huskyapply-brain"
version = "0.0.1"
description = "HuskyApply Brain Service - AI-powered job application processing"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "Yifeng Yu"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pika>=1.3.0",
    "httpx>=0.25.0",
    "langchain>=0.0.350",
    "langchain-openai>=0.0.5",
    "langchain-anthropic>=0.0.4",
    "python-dotenv>=1.0.0",
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
    "prometheus-client>=0.19.0",
    "psutil>=5.9.0",
    "opentelemetry-api>=1.21.0",
    "opentelemetry-sdk>=1.21.0",
    "opentelemetry-instrumentation-fastapi>=0.42b0",
    "opentelemetry-instrumentation-httpx>=0.42b0",
    "opentelemetry-exporter-jaeger-thrift>=1.21.0",
    "opentelemetry-exporter-otlp-proto-grpc>=1.21.0",
    "opentelemetry-instrumentation-logging>=0.42b0",
    "deprecated>=1.2.14",
    # AI Optimization Dependencies
    "sentence-transformers>=2.2.0",
    "redis>=4.5.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "tiktoken>=0.5.0",
    "openai>=1.0.0",
    # Vector Database Dependencies
    "chromadb>=0.4.0",
    # Resume Analysis Dependencies
    "PyPDF2>=3.0.1",
    "python-docx>=0.8.11",
    "Pillow>=10.0.0",
    "pytesseract>=0.3.10",
    "pdfplumber>=0.9.0",
    "mammoth>=1.6.0",
    "nltk>=3.8.0",
    "spacy>=3.6.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.7.0",
    "types-requests>=2.31.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["."]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=. --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.black]
line-length = 100
target-version = ['py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 100
known_first_party = ["ai_chain", "retry_utils", "tracing_utils"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
max-complexity = 10
per-file-ignores = [
    "__init__.py:F401",
    "tests/*:S101,S106"
]

[dependency-groups]
test = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
]
dev = [
    "bandit[toml]>=1.8.6",
]
